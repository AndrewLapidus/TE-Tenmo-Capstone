-- get users
select * from tenmo_user;

-- update balance ie transfer
UPDATE account SET balance = balance - 50 WHERE account.account_id = (SELECT account.account_id 
                FROM account JOIN tenmo_user ON account.user_id = tenmo_user.user_id 
                WHERE username = 'jon');
				
UPDATE account SET balance = balance + 50 WHERE account.account_id = (SELECT account.account_id 
                FROM account JOIN tenmo_user ON account.user_id = tenmo_user.user_id 
                WHERE username = 'bob');
				
--check accounts
SELECT username, balance
                FROM account
                JOIN tenmo_user ON account.user_id = tenmo_user.user_id
                WHERE username = 'jon' or username ='bob';
	
select * from account;
-- make transaction
INSERT INTO transfer (transfer_amount, from_id, to_id) VALUES ( 
                50, (SELECT account.account_id FROM account JOIN tenmo_user ON account.user_id = tenmo_user.user_id WHERE username = 'jon'),
				(SELECT account.account_id FROM account JOIN tenmo_user ON account.user_id = tenmo_user.user_id WHERE username = 'bob'));


--check transaction
select * from transfer;

-- get all transactions involving user
select transfer_id, transfer_amount, (select username from tenmo_user join account on tenmo_user.user_id = account.user_id where account.account_id = transfer.from_id ) as sender, (select username from tenmo_user join account on tenmo_user.user_id = account.user_id where account.account_id = transfer.to_id) as recipient
from transfer
where from_id = (select account_id from account join tenmo_user on account.user_id = tenmo_user.user_id where username = 'carl')
or to_id = (select account_id from account join tenmo_user on account.user_id = tenmo_user.user_id where username = 'carl')
order by transfer_id desc;


-- get transaction based on id and if involving user


